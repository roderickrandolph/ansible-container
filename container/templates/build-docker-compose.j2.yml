ansible-container:
  # If no $DOCKER_HOST then we need to run privileged so we can access /var/run/docker.sock
  {% if not env.DOCKER_HOST %}privileged: true{% endif %}
  image: "{{ builder_img_id }}"
  command: "/usr/local/bin/builder.sh /usr/local/bin/ansible-playbook {% if params.debug %}-vvv{% endif %} -i /etc/ansible/ansible-container-inventory.py -c docker {{ params.ansible_options | join(' ')  }} main.yml"
  environment:
    {% if env.DOCKER_HOST %}- DOCKER_HOST{% else %}- DOCKER_HOST=unix:///var/run/docker.sock{% endif %}
    {% if env.DOCKER_TLS_VERIFY %}- DOCKER_TLS_VERIFY{% endif %}
    {% if env.DOCKER_CERT_PATH %}- DOCKER_CERT_PATH=/docker-certs/{% endif %}
    - COMPOSE_HTTP_TIMEOUT=3000
    - DOCKER_API_VERSION={{ api_version }}
    - ANSIBLE_ORCHESTRATED_HOSTS={% for host in hosts %}{{ host }}{% if not loop.last %},{% endif %}{% endfor %}
    {% if with_variables %}{% for env_var in with_variables %}
    - {{ env_var }}
    {% endfor %}{% endif %}
  {% if volumes_from %}
  volumes_from:
    {% for vol in volumes_from %}
    - {{ vol }}
    {% endfor %}
  {% else %}
  volumes:
    {% if not env.DOCKER_HOST %}- /var/run/docker.sock:/var/run/docker.sock{% endif %}
    {% if env.DOCKER_CERT_PATH %}- $DOCKER_CERT_PATH:/docker-certs/:Z{% endif %}
    - {{ base_path }}:/ansible-container/:Z
    {% if with_volumes %}{% for vol in with_volumes %}
    - {{ vol }}{% endfor %}{% endif %}
  {% endif %}
  working_dir: /ansible-container/ansible/
{{ config }}
